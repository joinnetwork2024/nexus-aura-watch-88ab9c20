---
apiVersion: v1
kind: Namespace
metadata:
  name: n8n-monitor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-monitor
  namespace: n8n-monitor
  labels:
    app: n8n-monitor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: n8n-monitor
  template:
    metadata:
      labels:
        app: n8n-monitor
    spec:
      containers:
      - name: n8n-monitor
        image: n8n-monitor:latest  # Update with your registry: your-registry/n8n-monitor:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: n8n-monitor-service
  namespace: n8n-monitor
  labels:
    app: n8n-monitor
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
    name: http
  selector:
    app: n8n-monitor
---
# Optional: Ingress for production
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: n8n-monitor-ingress
#   namespace: n8n-monitor
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/cluster-issuer: letsencrypt-prod
# spec:
#   tls:
#   - hosts:
#     - monitor.yourdomain.com
#     secretName: n8n-monitor-tls
#   rules:
#   - host: monitor.yourdomain.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: n8n-monitor-service
#             port:
#               number: 80
